; Test script
#HEADER
title
subtitle
names
values
start_num
max_num

#CONTENT
/// Test escape sequences
escape char=``, mark char=`$

/// Test L-Cmds: Case operators
title  : $title$, $subtitle$
title-u: $u<title$, $u<subtitle$
title-U: $U<title$, $U<subtitle$
title-l: $l<title$, $l<subtitle$
title-L: $L<title$, $L<subtitle$

/// Test L-Cmd: replace
should be one '*' for each name: $r*<names>+, $

/// Test R-Cmd: expansion
list of comma seperated names: $names>+, $
       .. same but Upper case: $U<names>+, $

/// Test R-Cmd: expansion - more...
single vaule[$"1">+,$]
single vaule[$"1,2">+,$]
empty vaule[$"">+,$]

/// Test R-Cmd: Count
Counts:
title     = $title>#$, $+0<title>#$, $-0<title>#$
subtiltle = $subtitle>#$, $+1<subtitle>#$, $-1<subtitle>#$
names     = $names>#$, $+2<names>#$, $-2<names>#$
values    = $values>#$, $+3<values>#$, $-3<values>#$

/// Test R-Cmd: Indexing
names:
 [0]  = $names>:0$, (lower) $L<names>:0$
 [1]  = $names>:1$, (lower) $L<names>:1$
 [2]  = $names>:2$, (upper) $U<names>:2$
 [20] = $names>:20$, (upper) $U<names>:20$
 

/// Test special tokens
year=$_YYYY$, month=$_MM$, day=$_DD$, "$_RELPATH>+::$"
$_INLINE, names: iter 100 10 10
   $names$ = { $_ITERNUM$, $_ITERVAL$ }
$_END_INLINE

$_INLINE, names: ITER $start_num$ 20 $max_num$
   $names$ = { $_ITERNUM$, $_ITERVAL$ }
$_END_INLINE
   

/// Test R-Cmd: iterations (f,F,l,L)
/// All iterations
$_INLINE,names,values
   $names$$','$ $values$
$_END_INLINE

/// first only
$_INLINE,names,values
   $names$$','>f$ $values$
$_END_INLINE

/// NOT first
$_INLINE,names,values
   $names$$','>F$ $values$
$_END_INLINE

/// last only
$_INLINE,names,values
   $names$$','>l$ $values$
$_END_INLINE

/// NOT last
$_INLINE,names,values
   $names$$','>L$ $values$
$_END_INLINE


	/// Test S-Cmd: iteration (with)
	$_INLINE, title: iter -1 -10 4
	$title$ = $_ITERNUM$, $_ITERVAL$
	$_END_INLINE

	/// Test S-Cmd: iteration (with-out)
	$_INLINE, title
	$title$ = $_ITERNUM$, $_ITERVAL$
	$_END_INLINE


/// Test _SUBSCRIPT statement
	/// Iterate on flagName
	$_SUBSCRIPT, example_1.f4t, *names, "MyFlagLiteral,secondFlag"

	/// No iteration - literal args
	$_SUBSCRIPT, example_1.f4t, 'Henry', 'MyFlagLiteral'

	/// No iteration - tokens
	$_SUBSCRIPT, example_1.f4t, title, subtitle
